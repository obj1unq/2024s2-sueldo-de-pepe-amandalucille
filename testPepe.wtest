import pepe.*

describe "Sueldo Pepe" {
	
	test "pepe cadete, con bono resultado de monto fijo, y bono presentismo normal. falto 3 dias" {
		pepe.categoria(cadete)
		pepe.bonoResultado(montoFijo)
		pepe.bonoPresentismo(presentismoNormal)
		pepe.setFaltas(3)
		assert.equals(20800, pepe.sueldo())
	}
test "neto"{
	pepe.categoria(cadete)
	assert.equals(20000,pepe.neto())
	pepe.categoria(gerente)
	assert.equals(15000,pepe.neto())
	}
}

test "bonos resultados"{
	pepe.bonoResultado(montoFijo)
	assert.equals(800,pepe.extraPorResultado()) 

	pepe.bonoResultado(nuloBonoResultados)
	assert.equals(0 , pepe.extraPorResultado())

	pepe.bonoResultado(porcentaje)
	assert.equals(1500 , pepe.extraPorResultado())

	pepe.categoria(cadete)
	assert.equals(2000 , pepe.extraPorResultado())
}

test "bonos presentismo"{
	//normal
	pepe.bonoPresentismo(presentismoNormal)
	pepe.faltas(0)
	assert.equals(2000,pepe.extraPorPresentismo())
	
	pepe.faltas(1)
	assert.equals(1000,pepe.extraPorPresentismo())
}
test "bono presentismo normal con 2 faltas"{
	pepe.bonoPresentismo(presentismoNormal)
	pepe.faltas(2)
	assert.equals(0,pepe.extraPorPresentismo())
}
//ajuste
test "pepe recibe bono por presentismo ajuste con 0 faltas"	{
	pepe.bonoPresentismo(ajuste)
	pepe.faltas(0)
	assert.equals(100,pepe.extraPorPresentismo())
}	
test "pepe recibe bono por presentismo ajuste con 1 falta"{
	pepe.bonoPresentismo(ajuste)
	pepe.faltas(1)
	assert.equals(0,pepe.extraPorPresentismo())
}
test "pepe recibe bono por presentismo demagogico"{
	// demagogico
	pepe.bonoPresentismo(demagogico)
	pepe.categoria(gerente)
	assert.equals(500,pepe.extraPorPresentismo())

	pepe.categoria(cadete)
	assert.equals(300,pepe.extraPorPresentismo())
}
test "pepe recibe bono por presentismo demagogico nulo"{
	//nulo
	assert.equals(0,pepe.extraPorPresentismo())
}